/**
 * Herramienta de Evaluaci√≥n de Integridad Empresarial
 * 
 * Eval√∫a el nivel de integridad de una empresa seg√∫n par√°metros b√°sicos
 * de la Ley 27.401 (Responsabilidad Penal Empresaria)
 */

interface IntegrityAssessmentInput {
  companyName: string;
  sector: 'tecnologia' | 'finanzas' | 'consultoria' | 'manufactura' | 'servicios' | 'otro';
  employeeCount: number;
  hasComplianceProgram: boolean;
  riskAreas?: string[];
}

interface IntegrityAssessmentResult {
  overallScore: number;
  riskLevel: 'Bajo' | 'Medio' | 'Alto';
  recommendations: string[];
  strengths: string[];
  weaknesses: string[];
  complianceGaps: string[];
  nextSteps: string[];
}

export async function integrityAssessmentTool(
  input: IntegrityAssessmentInput
): Promise<{ content: [{ type: 'text'; text: string }] }> {
  
  try {
    const assessment = calculateIntegrityScore(input);
    
    const result = {
      company: input.companyName,
      assessment: assessment,
      summary: generateAssessmentSummary(assessment, input),
      detailedAnalysis: generateDetailedAnalysis(assessment, input),
      compliancePlan: generateBasicCompliancePlan(assessment, input)
    };

    return {
      content: [
        {
          type: 'text',
          text: JSON.stringify(result, null, 2)
        }
      ]
    };

  } catch (error) {
    throw new Error(`Error en evaluaci√≥n de integridad: ${error}`);
  }
}

function calculateIntegrityScore(input: IntegrityAssessmentInput): IntegrityAssessmentResult {
  let score = 0;
  const recommendations: string[] = [];
  const strengths: string[] = [];
  const weaknesses: string[] = [];
  const complianceGaps: string[] = [];
  const nextSteps: string[] = [];

  // Evaluaci√≥n del programa de compliance (40% del puntaje)
  if (input.hasComplianceProgram) {
    score += 40;
    strengths.push('Cuenta con programa de compliance establecido');
  } else {
    weaknesses.push('No tiene programa de compliance formal');
    complianceGaps.push('Implementar programa de compliance seg√∫n Art. 23 Ley 27.401');
    recommendations.push('Desarrollar e implementar un programa de integridad empresarial');
    nextSteps.push('1. Designar oficial de compliance');
  }

  // Evaluaci√≥n por tama√±o de empresa (20% del puntaje)
  if (input.employeeCount >= 500) {
    score += 15; // Empresas grandes necesitan m√°s controles
    recommendations.push('Implementar controles espec√≠ficos para empresas de gran escala');
  } else if (input.employeeCount >= 50) {
    score += 20;
    strengths.push('Tama√±o empresarial permite implementaci√≥n efectiva de controles');
  } else {
    score += 10;
    recommendations.push('Adaptar controles al tama√±o de la organizaci√≥n');
  }

  // Evaluaci√≥n por sector de riesgo (25% del puntaje)
  const sectorRisk = getSectorRiskProfile(input.sector);
  score += sectorRisk.score;
  
  if (sectorRisk.isHighRisk) {
    recommendations.push(`Sector ${input.sector} requiere controles espec√≠ficos adicionales`);
    complianceGaps.push('Implementar due diligence reforzado para sector de alto riesgo');
  } else {
    strengths.push(`Sector ${input.sector} presenta riesgo moderado`);
  }

  // Evaluaci√≥n de √°reas de riesgo identificadas (15% del puntaje)
  const riskAreaCount = input.riskAreas?.length || 0;
  if (riskAreaCount === 0) {
    score += 15;
    strengths.push('No se identificaron √°reas de riesgo espec√≠ficas');
  } else if (riskAreaCount <= 2) {
    score += 10;
    recommendations.push('Desarrollar controles espec√≠ficos para las √°reas de riesgo identificadas');
  } else {
    score += 5;
    weaknesses.push('M√∫ltiples √°reas de riesgo requieren atenci√≥n prioritaria');
    complianceGaps.push('Mapeo de riesgos y controles espec√≠ficos por √°rea');
  }

  // Determinar nivel de riesgo
  let riskLevel: 'Bajo' | 'Medio' | 'Alto';
  if (score >= 75) {
    riskLevel = 'Bajo';
  } else if (score >= 50) {
    riskLevel = 'Medio';
  } else {
    riskLevel = 'Alto';
  }

  // Agregar recomendaciones espec√≠ficas por nivel de riesgo
  if (riskLevel === 'Alto') {
    nextSteps.push(
      '2. Realizar diagn√≥stico completo de riesgos',
      '3. Implementar pol√≠ticas b√°sicas de compliance',
      '4. Establecer canal de denuncias',
      '5. Planificar capacitaci√≥n inicial'
    );
  } else if (riskLevel === 'Medio') {
    nextSteps.push(
      '2. Fortalecer controles existentes',
      '3. Implementar due diligence de terceros',
      '4. Establecer m√©tricas de compliance',
      '5. Revisar y actualizar pol√≠ticas'
    );
  } else {
    nextSteps.push(
      '2. Mantener y mejorar programa existente',
      '3. Implementar auditor√≠a independiente',
      '4. Desarrollar cultura de integridad',
      '5. Establecer benchmarking sectorial'
    );
  }

  return {
    overallScore: Math.round(score),
    riskLevel,
    recommendations,
    strengths,
    weaknesses,
    complianceGaps,
    nextSteps
  };
}

function getSectorRiskProfile(sector: string): { score: number; isHighRisk: boolean } {
  const profiles = {
    'finanzas': { score: 15, isHighRisk: true },
    'tecnologia': { score: 20, isHighRisk: false },
    'consultoria': { score: 18, isHighRisk: false },
    'manufactura': { score: 20, isHighRisk: false },
    'servicios': { score: 22, isHighRisk: false },
    'otro': { score: 18, isHighRisk: false }
  };

  return profiles[sector as keyof typeof profiles] || profiles.otro;
}

function generateAssessmentSummary(
  assessment: IntegrityAssessmentResult, 
  input: IntegrityAssessmentInput
): string {
  return `
üìä RESUMEN EJECUTIVO DE INTEGRIDAD

Empresa: ${input.companyName}
Sector: ${input.sector.toUpperCase()}
Empleados: ${input.employeeCount}

üéØ PUNTUACI√ìN GENERAL: ${assessment.overallScore}/100
üö® NIVEL DE RIESGO: ${assessment.riskLevel}

${assessment.riskLevel === 'Alto' ? '‚ö†Ô∏è' : assessment.riskLevel === 'Medio' ? '‚ö°' : '‚úÖ'} ESTADO: ${
    assessment.riskLevel === 'Alto' 
      ? 'Requiere atenci√≥n inmediata para cumplir Ley 27.401'
      : assessment.riskLevel === 'Medio'
      ? 'Cumplimiento b√°sico, mejoras recomendadas'
      : 'Buen nivel de compliance, mantener y mejorar'
  }
  `.trim();
}

function generateDetailedAnalysis(
  assessment: IntegrityAssessmentResult,
  input: IntegrityAssessmentInput
): string {
  return `
üìã AN√ÅLISIS DETALLADO

üü¢ FORTALEZAS IDENTIFICADAS:
${assessment.strengths.map(s => `‚Ä¢ ${s}`).join('\n')}

üî¥ DEBILIDADES A CORREGIR:
${assessment.weaknesses.length > 0 
  ? assessment.weaknesses.map(w => `‚Ä¢ ${w}`).join('\n')
  : '‚Ä¢ No se identificaron debilidades cr√≠ticas'
}

‚öñÔ∏è BRECHAS DE COMPLIANCE LEY 27.401:
${assessment.complianceGaps.length > 0
  ? assessment.complianceGaps.map(g => `‚Ä¢ ${g}`).join('\n')
  : '‚Ä¢ No se identificaron brechas cr√≠ticas de compliance'
}

üéØ RECOMENDACIONES PRIORITARIAS:
${assessment.recommendations.map(r => `‚Ä¢ ${r}`).join('\n')}
  `.trim();
}

function generateBasicCompliancePlan(
  assessment: IntegrityAssessmentResult,
  input: IntegrityAssessmentInput
): string {
  return `
üìã PLAN B√ÅSICO DE COMPLIANCE

üöÄ PASOS INMEDIATOS (30 d√≠as):
${assessment.nextSteps.map(step => `${step}`).join('\n')}

‚è∞ CRONOGRAMA SUGERIDO:
‚Ä¢ Mes 1: Diagn√≥stico y pol√≠ticas b√°sicas
‚Ä¢ Mes 2-3: Implementaci√≥n de controles
‚Ä¢ Mes 4-6: Capacitaci√≥n y comunicaci√≥n
‚Ä¢ Mes 7-12: Monitoreo y mejora continua

üí° RECURSOS RECOMENDADOS:
‚Ä¢ Gu√≠a pr√°ctica Ley 27.401 (UIF Argentina)
‚Ä¢ Template de pol√≠ticas de compliance
‚Ä¢ Capacitaci√≥n b√°sica en √©tica empresarial
‚Ä¢ Software de gesti√≥n de compliance (opcional)

üìû PR√ìXIMOS PASOS:
1. Revisar este reporte con equipo directivo
2. Asignar responsable de compliance
3. Establecer presupuesto para implementaci√≥n
4. Planificar cronograma detallado
  `.trim();
}